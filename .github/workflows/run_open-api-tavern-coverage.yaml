# MIT License

# (C) Copyright [2022] Hewlett Packard Enterprise Development LP

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
name: Run Open-API Tavern Coverage
on: 
  workflow_call:
    inputs:
      runs-on:
        description: The type of machine to run the job on.
        type: string
        required: false
        default: ubuntu-latest
      open-api-file:
        description: Registry to publish container images to
        type: string
        required: true
      tavern-file-dir:
        description: relative path of tavern files
        type: string
        required: true
      api-target-urls:
        description: comma separated list of urls to consider when parsing tavern files
        type: string
        required: true

      open-api-tavern-coverage-image:
        description: Open API Tavern coverage docker image to use.
        type: string
        required: false
        default: artifactory.algol60.net/csm-docker/stable/open-api-tavern-coverage:1.1.0

      job-summary-template:
        description: Job summary template
        type: string
        required: false
        default: |
          <!-- This file is templated with https://pkg.go.dev/html/template -->

          # Open-API Tavern Coverage Report
          <table>
            <tbody>
              <tr>
                <td>Endpoint</td>
                <td>Method</td>
                <td>Test Case Count</td>
                <td>Status</td>
              </tr>
          {{- range $endpoint := .endpoints }}
              <tr>
                  <td>{{$endpoint.url}}</td>
                  <td>{{$endpoint.method}}</td>
                  <td>{{$endpoint.count}}</td>
                  {{- if eq $endpoint.count 0 }}
                <td>:x:</td>
                  {{- end}}
                  {{- if eq $endpoint.count 1 }}
                <td>:warning:</td>
                  {{- end}}
                  {{- if gt $endpoint.count 1 }}
                <td>:white_check_mark:</td>
                  {{- end}}
              </tr>
          {{- end}}
            </tbody>
          </table>

    secrets:
      ARTIFACTORY_ALGOL60_READONLY_USERNAME:
        description: Artifactory readonly username used for docker pulls
        required: true
      ARTIFACTORY_ALGOL60_READONLY_TOKEN:
        description: Artifactory token for the given user
        required: true

jobs:
  run_coverage:

    name: Run Coverage
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to algol60 Container Registry
        uses: docker/login-action@v2
        with:
          registry: artifactory.algol60.net
          username: ${{ secrets.ARTIFACTORY_ALGOL60_READONLY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ALGOL60_READONLY_TOKEN }}

      - name: Run Open-API Tavern Coverage Tool
        shell: bash
        run: docker run -v "$(pwd):/src/app/data" -e TAVERN_FILE_DIR="data/${{ inputs.tavern-file-dir }}" -e OPEN_API_FILE="data/${{ inputs.open-api-file }}" -e API_TARGET_URLS=${{ inputs.api-target-urls }} "${{ inputs.open-api-tavern-coverage-image }}"

      - name: Job summary prep
        shell: bash
        env:
          JOB_SUMMARY_TEMPLATE: ${{ inputs.job-summary-template }}
        run: |
          # Write out the job summary template to a file
          mkdir -p temp
          printenv JOB_SUMMARY_TEMPLATE > ./temp/job_summary_template.md.tpl

      - name: Render job summary
        id: template
        uses: chuhlomin/render-template@v1.6
        with:
          template: ./temp/job_summary_template.md.tpl
          vars_path: ./output/job_summary_template_values.yaml
      
      - name: Set job summary
        run: echo '${{ steps.template.outputs.result }}' >> $GITHUB_STEP_SUMMARY